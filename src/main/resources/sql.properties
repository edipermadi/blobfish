# table creation
SQL_CREATE_TABLE_RECIPIENTS=CREATE TABLE IF NOT EXISTS `recipients` (`id` INT NULL PRIMARY KEY AUTO_INCREMENT, `uuid` UUID NULL DEFAULT RANDOM_UUID(), `name` VARCHAR(64) NOT NULL UNIQUE, `metadata` CLOB NULL, `certificate` BLOB NOT NULL, `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP)
SQL_CREATE_TABLE_TAGS=CREATE TABLE IF NOT EXISTS `tags` (`id` INT PRIMARY KEY AUTO_INCREMENT, `uuid` UUID NULL DEFAULT RANDOM_UUID(), `tag` VARCHAR(64) NOT NULL UNIQUE, `imported` BOOLEAN DEFAULT false, `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP)
SQL_CREATE_TABLE_BLOBS=CREATE TABLE IF NOT EXISTS `blobs` (`id` INT PRIMARY KEY AUTO_INCREMENT, `uuid` UUID NULL DEFAULT RANDOM_UUID(), `path` VARCHAR(1024) NOT NULL UNIQUE, `mimetype` VARCHAR(128) NOT NULL, `payload` BLOB NOT NULL, `imported` BOOLEAN DEFAULT false, `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP)
SQL_CREATE_TABLE_BLOBS_TAGS=CREATE TABLE IF NOT EXISTS `blobs_tags` (`blob_id` INT NOT NULL, `tag_id` INT NOT NULL, FOREIGN KEY (`blob_id`) REFERENCES `blobs`(`id`), FOREIGN KEY (`tag_id`) REFERENCES `tags`(`id`))

# index creation
SQL_CREATE_INDEX_RECIPIENTS_UUID=CREATE INDEX IF NOT EXISTS `recipients_uuid` ON `recipients` (`uuid`)
SQL_CREATE_INDEX_RECIPIENTS_NAME=CREATE INDEX IF NOT EXISTS `recipients_name` ON `recipients` (`name`)
SQL_CREATE_INDEX_TAGS_UUID=CREATE INDEX IF NOT EXISTS `tags_uuid` ON `tags` (`uuid`)
SQL_CREATE_INDEX_TAGS_TAG=CREATE INDEX IF NOT EXISTS `tags_tag` ON `tags` (`tag`)
SQL_CREATE_INDEX_BLOBS_UUID=CREATE INDEX IF NOT EXISTS `blobs_uuid` ON `blobs` (`uuid`)
SQL_CREATE_INDEX_BLOBS_PATH=CREATE INDEX IF NOT EXISTS `blobs_path` ON `blobs` (`path`)
SQL_CREATE_INDEX_BLOBS_TAGS_UNIQUE=CREATE UNIQUE INDEX IF NOT EXISTS `blobs_tags_unique` ON `blobs_tags` (`blob_id`, `tag_id`)

# recipients
SQL_INSERT_INTO_RECIPIENTS=INSERT INTO `recipients` (`name`, `metadata`, `certificate`) VALUES (?, ?, ?)
SQL_SELECT_RECIPIENTS=SELECT `uuid`, `name` FROM `recipients` ORDER BY `created_at` ASC OFFSET ? LIMIT ?
SQL_SELECT_RECIPIENTS_CERTIFICATE_BY_UUID=SELECT `certificate` FROM `recipients` WHERE `uuid` = ?
SQL_SELECT_RECIPIENTS_METADATA_BY_UUID=SELECT `metadata` FROM `recipients` WHERE `uuid` = ?

# tags
SQL_MERGE_TAGS_BY_TAG_VALUE=MERGE INTO `tags` (`tag`) KEY (`tag`) VALUES(?)
SQL_SELECT_TAGS=SELECT `uuid`, `tag` FROM `tags` ORDER BY `created_at` ASC OFFSET ? LIMIT ? 
SQL_SELECT_TAGS_UUID_BY_TAG_VALUE=SELECT `uuid` FROM `tags` WHERE `tag` = ? LIMIT 1
SQL_SELECT_TAGS_VALUE_BY_TAG_ID=SELECT `tag` FROM `tags` WHERE `uuid` = ? LIMIT 1
SQL_COUNT_TAG_BY_VALUE=SELECT COUNT(`id`) as `count` FROM `tags` WHERE `tag` = ?
SQL_UPDATE_TAG_VALUE_BY_TAG_ID=UPDATE `tags` SET `tag` = ? WHERE `uuid` = ?
SQL_DELETE_TAGS_BY_TAG_ID=DELETE FROM `tags` WHERE `uuid` = ?

# blobs
SQL_INSERT_BLOB=INSERT INTO `blobs` (`path`, `mimetype`, `payload`, `imported`) VALUES (?, ?, ?, ?)
SQL_LIST_BLOB=SELECT `uuid`, `path`, `mimetype` FROM `blobs` ORDER BY `created_at` ASC OFFSET ? LIMIT ? 
SQL_GET_BLOB_BY_UUID=SELECT `payload` FROM `blobs` WHERE `uuid` = ?
SQL_LIST_BLOB_WITH_TAG_UUID=SELECT `uuid`, `path`, `mimetype` FROM `blobs` JOIN `blobs_tags` ON `blobs_tags`.`blob_id` = `blobs`.`id` and `blobs_tags`.`tag_id` = (SELECT `id` FROM `tags` WHERE `uuid` = ?) ORDER BY `blobs`.`created_at` ASC OFFSET ? LIMIT ? 

# blob-tag
SQL_INSERT_BLOBS_TAGS_BY_BLOB_ID_AND_TAG_VALUE=INSERT INTO `blobs_tags` (`blob_id`, `tag_id`) VALUES (?, (SELECT `id` from `tags` WHERE `tag` = ?))
SQL_SELECT_BLOBS_TAGS_BY_BLOB_UUID=SELECT `tags`.`uuid` as `uuid`, `tags`.`tag` FROM `tags` JOIN `blobs_tags` ON `tags`.`id` = `blobs_tags`.`tag_id` JOIN `blobs` ON `blobs_tags`.`blob_id` = `blobs`.`id` WHERE `blobs`.`uuid` = ?
SQL_INSERT_BLOBS_TAGS_BY_BLOB_ID_AND_TAG_ID=INSERT INTO `blobs_tags` (`blob_id`, `tag_id`) VALUES ((SELECT `id` FROM `blobs` WHERE `uuid` = ?), (SELECT `id` from `tags` WHERE `uuid` = ?))
SQL_REMOVE_BLOBS_TAGS_BY_BLOB_ID_AND_TAG_ID=DELETE FROM `blobs_tags` WHERE `blob_id` = (SELECT `id` FROM `blobs` WHERE `uuid` = ?) AND `tag_id` = (SELECT `id` from `tags` WHERE `uuid` = ?)
SQL_REMOVE_BLOBS_TAGS_BY_TAG_ID=DELETE FROM `blobs_tags` WHERE `tag_id` = (SELECT `id` from `tags` WHERE `uuid` = ?)
